# .github/workflows/scheduled_monitor.yml
name: Scheduled Monitoring and AutoML Crew

on:
  # Schedule: Runs the workflow every 5 minutes
  schedule:
    - cron: '*/5 * * * *'
  # Allows manual run from the Actions tab
  workflow_dispatch:

jobs:
  run_data_science_crew:
    runs-on: ubuntu-latest
    
    # Define environment variables needed by the Python script
    env:
      OLLAMA_BASE_URL: "http://localhost:11434"
      
      # INJECT SECRETS FOR IMAP CONNECTION
      IMAP_SERVER: ${{ secrets.IMAP_SERVER }}
      IMAP_PORT: ${{ secrets.IMAP_PORT }}
      IMAP_USERNAME: ${{ secrets.IMAP_USERNAME }}
      IMAP_APP_PASSWORD: ${{ secrets.IMAP_APP_PASSWORD }}
      
      # INJECT SECRETS FOR COMMUNICATION/MOCK
      CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
      
      # INJECT SECRETS FOR GITHUB TOOL (USING SECURE, RENAMED SECRETS)
      CREW_COMMIT_TOKEN: ${{ secrets.CREW_COMMIT_TOKEN }} # Renamed GITHUB_TOKEN
      REPO_OWNER: ${{ secrets.REPO_OWNER }}                 # Renamed GITHUB_REPO_OWNER
      REPO_NAME: ${{ secrets.REPO_NAME }}                   # Renamed GITHUB_REPO_NAME

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install poetry
        # Requires pyproject.toml in the root directory
        poetry install --no-root
        
    - name: Pull and Run Ollama/Mistral LLM Service
      run: |
        # Start a local Ollama service in the background
        docker pull mistral
        docker run -d -v /usr/bin/ollama:/usr/bin/ollama -p 11434:11434 --name ollama-server ollama serve
        # Wait a sufficient time for the service to start
        sleep 45 
        
    - name: Run Data Science Crew
      run: |
        # Execute the main crew script
        python crew.py
